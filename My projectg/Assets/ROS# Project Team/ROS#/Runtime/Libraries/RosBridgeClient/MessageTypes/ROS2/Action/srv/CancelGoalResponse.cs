/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

#if ROS2

namespace RosSharp.RosBridgeClient.MessageTypes.Action
{
    public class CancelGoalResponse : Message
    {
        public const string RosMessageName = "action_msgs/srv/CancelGoal";

        // #
        // # Return codes.
        // #
        //  Indicates the request was accepted without any errors.
        // 
        //  One or more goals have transitioned to the CANCELING state. The
        //  goals_canceling list is not empty.
        public const sbyte ERROR_NONE = 0;
        //  Indicates the request was rejected.
        // 
        //  No goals have transitioned to the CANCELING state. The goals_canceling list is
        //  empty.
        public const sbyte ERROR_REJECTED = 1;
        //  Indicates the requested goal ID does not exist.
        // 
        //  No goals have transitioned to the CANCELING state. The goals_canceling list is
        //  empty.
        public const sbyte ERROR_UNKNOWN_GOAL_ID = 2;
        //  Indicates the goal is not cancelable because it is already in a terminal state.
        // 
        //  No goals have transitioned to the CANCELING state. The goals_canceling list is
        //  empty.
        public const sbyte ERROR_GOAL_TERMINATED = 3;
        //  Return code, see above definitions.
        public sbyte return_code { get; set; }
        //  Goals that accepted the cancel request.
        public GoalInfo[] goals_canceling { get; set; }

        public CancelGoalResponse()
        {
            this.return_code = 0;
            this.goals_canceling = new GoalInfo[0];
        }

        public CancelGoalResponse(sbyte return_code, GoalInfo[] goals_canceling)
        {
            this.return_code = return_code;
            this.goals_canceling = goals_canceling;
        }
    }
}
#endif
