/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

#if ROS2

namespace RosSharp.RosBridgeClient.MessageTypes.Action
{
    public class GoalStatus : Message
    {
        public const string RosMessageName = "action_msgs/msg/GoalStatus";

        //  An action goal can be in one of these states after it is accepted by an action
        //  server.
        // 
        //  For more information, see http://design.ros2.org/articles/actions.html
        //  Indicates status has not been properly set.
        public const sbyte STATUS_UNKNOWN = 0;
        //  The goal has been accepted and is awaiting execution.
        public const sbyte STATUS_ACCEPTED = 1;
        //  The goal is currently being executed by the action server.
        public const sbyte STATUS_EXECUTING = 2;
        //  The client has requested that the goal be canceled and the action server has
        //  accepted the cancel request.
        public const sbyte STATUS_CANCELING = 3;
        //  The goal was achieved successfully by the action server.
        public const sbyte STATUS_SUCCEEDED = 4;
        //  The goal was canceled after an external request from an action client.
        public const sbyte STATUS_CANCELED = 5;
        //  The goal was terminated by the action server without an external request.
        public const sbyte STATUS_ABORTED = 6;
        //  Goal info (contains ID and timestamp).
        public GoalInfo goal_info { get; set; }
        //  Action goal state-machine status.
        public sbyte status { get; set; }

        public GoalStatus()
        {
            this.goal_info = new GoalInfo();
            this.status = 0;
        }

        public GoalStatus(GoalInfo goal_info, sbyte status)
        {
            this.goal_info = goal_info;
            this.status = status;
        }
    }
}
#endif
